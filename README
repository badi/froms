* Building and installing:

$ cd defunctor
$ cabal configure
$ cabal build
$ cabal install

* Usage

-- In haskell code:
import Data.From
import Data.Defunctor

{- From example 1 -}
data Foo = Foo String
instance From Foo String where
    from (Foo s) = s


{- From example 2. Using phantom types -}
data IntT
data StringT

instance From (Foo IntT) Int where
    From (Foo a) = a

instance From (Foo StringT) String where
    From (Bar a) = a

test = let foo = Foo 42      :: Foo IntT
           bar = Bar "hello" :: Foo StringT
       in (from foo, from bar)
=====> (42,"hello")


{- Defunctor example -}
data Foo a = Foo a

instance Functor Foo where
    fmap f (Foo a) = Foo (f a)

instance From (Foo a) a where
    from (Foo a) = a

instance Defunctor Foo where
    pull = from

test = let foo = Foo 42
       in (from foo, pull foo)
 =====> (42,42)
