* Building and installing:

$ cd defunctor
$ cabal configure
$ cabal build
$ cabal install

* Usage

-- In haskell code:
import Data.From
import Data.Defunctor

{- example: From -}
data Foo = Foo String
instance From Foo String where
    from (Foo s) = s


{- example: FromTagged -}
data Foo a = Foo Int | Bar String

data IntT
data StringT

instance FromTagged (Foo IntT) Int where
    fromTagged (Foo a) = a

instance FromTagged (Foo StringT) String where
    fromTagged (Bar a) = a

test = let foo = Foo 42      :: Foo IntT
           bar = Bar "hello" :: Foo StringT
       in (fromTagged foo, fromTagged bar)
=====> (42,"hello")


{- example: Defunctor -}
data Foo a = Foo a

instance Functor Foo where
    fmap f (Foo a) = Foo (f a)

instance From (Foo a) a where
    from (Foo a) = a

instance Defunctor Foo where
    pull = from

test = let foo = Foo 42
       in (from foo, pull foo)
 =====> (42,42)
